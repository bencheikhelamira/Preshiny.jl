---
title: "Performance de Julia et RShiny dans l'Exploration des R√©seaux de Neurones Convolutifs"

format:
  revealjs:
    theme: solarized
    transition: concave
    slide-number: true
    self-contained: true
---

:::: {.columns}
::: {.column width="50%"}   
![](julia-logo-300.png){width=280px}

**Professeur :**  
**R√©mi**
:::

::: {.column width="50%"}
![](logo.png){width=280px}

**Membres du groupe :**  
**El Amira Cerine BENCHEIKH**  
**MEKKAOUI Sara**  
**BELOUARDA Manal**  
:::
::::
---

# Plan üìã

Voici le plan :  
1. Introduction  
2. R√©seaux de Neurones et Contexte  
3. Comparaison des langages Julia et Python  
4. Construction et Entra√Ænement du Mod√®le  
5. R√©sultats et Visualisations  
6. RShiny et Int√©gration  
7. Conclusion  

---

# Introduction  

- Pr√©sentation du projet : exploration des r√©seaux de neurones convolutifs (CNN).  
- Objectif : √âvaluer les performances de Julia dans le Machine Learning.  
- Focus : Impl√©mentation des r√©seaux de neurones en Julia et application RShiny

---

# R√©seaux de Neurones et Contexte  

- D√©finition des CNN et leur r√¥le dans le traitement d'images.  
- Exemple d'application : reconnaissance d'images.  
- Importance de la normalisation des donn√©es et de l'encodage des labels.

---

# Comparaison des Langages  

- **Julia :**  
  - Performances √©lev√©es.  
  - Gestion simplifi√©e des matrices et des calculs lourds.  

- **Python :**  
  - Large communaut√© et √©cosyst√®me riche.  
  - Mais : limitations en termes de rapidit√© pour des t√¢ches lourdes.  

---

# Comparaison des langages

![](ok.png){width=100%}

---

# Construction et Entra√Ænement du Mod√®le  

- Utilisation et impl√©mentation des couches : Convolution, MaxPooling, Dense, Softmax.  
- Fonction de perte : Entropie crois√©e.  
- Optimisation avec des m√©triques comme : pr√©cision, recall, et F1-Score.

---

# Couche de convolution

![](convolutif.png){width=100%}

---

# R√©sultats et Visualisations  

- Visualisation de la matrice de confusion.  
- Courbes de perte et d'accuracy.  
- Insights : Julia a montr√© une sup√©riorit√© dans l'entra√Ænement des mod√®les CNN.  

---

# Matrice de confusion

![](matriceconf.jpeg){width=100%}

---

# RShiny et Int√©gration  

- Cr√©ation d'une application interactive pour visualiser les r√©sultats :  
  - Histogrammes des pixels.  
  - Nuages de points.  

- Int√©gration Julia et R via le package **Rulia**.  
- Tableau de bord interactif pour explorer les pr√©dictions.

---

# Histogrammes des pixels

![](histogramme_pix.PNG){width=100%}

---

# Nuage de points

![](0.PNG){width=100%}

---

# Exemple de l'application de pr√©diction de classes

![](sara1.png){width=100%} 

---

![](sara3.png){width=100%}

---

# Tableau de bord

![](perftab.jpeg){width=100%}

---

# Conclusion ‚úÖ

- Julia offre des performances remarquables pour les t√¢ches de Machine Learning.  
- L'int√©gration avec RShiny a permis de rendre les r√©sultats interactifs et compr√©hensibles.  

Merci pour votre attention ! üòä  
Des questions ?  
